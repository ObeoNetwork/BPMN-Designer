/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package org.obeonetwork.dsl.bpmn2.validation;

import org.eclipse.emf.common.util.EList;

import org.obeonetwork.dsl.bpmn2.ComplexBehaviorDefinition;
import org.obeonetwork.dsl.bpmn2.DataInput;
import org.obeonetwork.dsl.bpmn2.DataOutput;
import org.obeonetwork.dsl.bpmn2.EventDefinition;
import org.obeonetwork.dsl.bpmn2.Expression;
import org.obeonetwork.dsl.bpmn2.ItemAwareElement;
import org.obeonetwork.dsl.bpmn2.MultiInstanceBehavior;

/**
 * A sample validator interface for {@link org.obeonetwork.dsl.bpmn2.MultiInstanceLoopCharacteristics}.
 * This doesn't really do anything, and it's not a real EMF artifact.
 * It was generated by the org.eclipse.emf.examples.generator.validator plug-in to illustrate how EMF's code generator can be extended.
 * This can be disabled with -vmargs -Dorg.eclipse.emf.examples.generator.validator=false.
 */
public interface MultiInstanceLoopCharacteristicsValidator {
	boolean validate();

	boolean validateIsSequential(boolean value);

	boolean validateBehavior(MultiInstanceBehavior value);

	boolean validateLoopCardinality(Expression value);

	boolean validateLoopDataInputRef(ItemAwareElement value);

	boolean validateLoopDataOutputRef(ItemAwareElement value);

	boolean validateInputDataItem(DataInput value);

	boolean validateOutputDataItem(DataOutput value);

	boolean validateCompletionCondition(Expression value);

	boolean validateComplexBehaviorDefinition(
			EList<ComplexBehaviorDefinition> value);

	boolean validateOneBehaviorEventRef(EventDefinition value);

	boolean validateNoneBehaviorEventRef(EventDefinition value);
}
